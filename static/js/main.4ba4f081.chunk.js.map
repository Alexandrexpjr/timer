{"version":3,"sources":["components/Footer.jsx","images/jurassic-logo.png","components/Header.jsx","images/parasaurolofi.png","images/popteranodon.png","images/velocirocktor.webp","context/timerContext.js","components/PlaylistCard.jsx","components/Playlist.jsx","components/audio/Rex.mpeg","components/Audio.jsx","components/Button.jsx","components/Timer.jsx","helpers/index.js","App.js","context/timerProvider.jsx","reportWebVitals.js","index.js"],"names":["Footer","href","Header","className","src","Logo","alt","timerContext","createContext","PlaylistCard","gender","image","useContext","choosenGender","setChoosenGender","currentGender","currGender","getGender","onClick","p","Playlist","Raptor","Parasauro","Ptero","Video","isPlaying","Rex","autoPlay","TimerButton","handleClick","id","text","disabled","type","Timer","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","minutesReceived","setMinutesReceived","timeHasCome","setTimeHasCome","setRunning","presetTimers","setPresetTimers","timerIsRunning","intervalId","setIntervalId","setDisabled","timerIsPaused","setPause","startTimer","time","totalSeconds","setInterval","clearInterval","Math","floor","onStartButtonClick","onChange","value","target","parsedValue","parseFloat","min","includes","length","shift","map","timer","onPresetTimerButtonClick","random","Audio","genders","App","url","playing","height","width","TimerProvider","children","undefined","INITIAL_VALUE","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ba4f081.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      <p> &#169; Todos os direitos reservados, <a href=\"https://www.linkedin.com/in/alexandrepimenteljr/\">Alexandre Pimentel</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/jurassic-logo.2a98d2fd.png\";","import React from 'react';\nimport Logo from '../images/jurassic-logo.png'\n\nfunction Header() {\n  return (\n    <header >\n      <span className=\"title\">Jurassic Timer</span>\n      <img src={ Logo } alt=\"jurassic world symbol\" className=\"logo\" />\n    </header>\n  );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/parasaurolofi.62046dd2.png\";","export default __webpack_public_path__ + \"static/media/popteranodon.48c8d096.png\";","export default __webpack_public_path__ + \"static/media/velocirocktor.02a96351.webp\";","import { createContext } from \"react\";\n\nconst timerContext = createContext();\n\nexport default timerContext;","import React, { useContext } from 'react';\nimport timerContext from '../context/timerContext';\n\nfunction PlaylistCard({ gender, image }) {\n  const { choosenGender, setChoosenGender } = useContext(timerContext);\n\n  const getGender = (currGender) => {\n    switch (currGender) {\n      case 'VelociROCKtor': \n        return 'ROCK';\n      case 'ParasauroLO-FI':\n        return 'LO-FI';\n      case 'POPteranodon':\n        return 'POP';\n      default: \n        return undefined;\n    }\n  }\n  \n  const currentGender = getGender(gender);\n\n  return (\n    <div className={choosenGender === gender ? 'card selected' : 'card'} onClick={ () => setChoosenGender(p => p === gender ? '' : gender)} >\n      <img src={ image } alt=\"\" />\n      <span>{ gender }</span>\n      <p className='gender'>{ currentGender }</p>\n    </div>\n  );\n}\n\nexport default PlaylistCard;","import React from 'react';\nimport Parasauro from '../images/parasaurolofi.png';\nimport Ptero from '../images/popteranodon.png';\nimport Raptor from '../images/velocirocktor.webp';\nimport PlaylistCard from './PlaylistCard';\n\nfunction Playlist() {\n  return (\n    <div className='playlists'>\n      <p>Agora escolha seu estilo favorito: </p>\n      <div className=\"cards\">\n        <PlaylistCard gender={'VelociROCKtor'} image={ Raptor } />\n        <PlaylistCard gender={'ParasauroLO-FI'} image={ Parasauro } />\n        <PlaylistCard gender={'POPteranodon'} image={ Ptero } />\n      </div>\n    </div>\n  );\n}\n\nexport default Playlist;","export default __webpack_public_path__ + \"static/media/Rex.eee65c9f.mpeg\";","import Rex from './audio/Rex.mpeg';\n\nfunction Video({ isPlaying }) {\n  return (\n    <div>\n      <audio\n        src={ Rex } \n        autoPlay={ isPlaying }\n      />\n    </div>\n  );\n}\n\nexport default Video;\n\n// fonte: https://www.npmjs.com/package/react-player#adding-custom-players","import React from 'react';\n\nfunction TimerButton({ handleClick, id, text, disabled }) {\n  return (\n    <button type='button' className={ id } onClick={ handleClick } disabled={ disabled }>{ text }</button>\n  );\n}\n\nexport default TimerButton;","import React, { useContext, useState } from 'react';\nimport timerContext from '../context/timerContext';\nimport Audio from './Audio';\nimport TimerButton from './Button';\n\nfunction Timer() {\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [minutesReceived, setMinutesReceived] = useState(0);\n  const { timeHasCome, setTimeHasCome, setRunning, presetTimers, setPresetTimers, timerIsRunning } = useContext(timerContext);\n  const [intervalId, setIntervalId] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [timerIsPaused, setPause] = useState(false);\n\n  const startTimer = (time) => {\n    setRunning(true);\n    let totalSeconds = time * 60;\n    const id = setInterval(() => {\n      if(totalSeconds === 0) {\n        setRunning(false);\n        setTimeHasCome(false);\n        clearInterval(id);\n      }\n      setHours(Math.floor(totalSeconds / 3600));\n      setMinutes(Math.floor((totalSeconds % 3600) / 60));\n      setSeconds(totalSeconds % 60);\n      setTimeHasCome(!!(totalSeconds <= 8 && totalSeconds));\n      totalSeconds -= 1;\n    }, 1000);\n    setIntervalId(id);\n  }\n\n  const onStartButtonClick = () => {\n    clearInterval(intervalId);\n    startTimer(minutesReceived);\n    setPause(false);\n  }\n\n  const onSavePresetButtonClick = () => {\n    if(presetTimers.includes(minutesReceived)) {\n      return;\n    }\n\n    if (minutesReceived && presetTimers.length < 2) {\n      setPresetTimers([...presetTimers, minutesReceived]);\n    }\n    if (presetTimers.length === 2) {\n      presetTimers.shift();\n      setPresetTimers([...presetTimers, minutesReceived])\n    }\n  }\n\n  const onPresetTimerButtonClick = (timer) => {\n    clearInterval(intervalId);\n    setMinutesReceived(timer)\n    startTimer(timer);\n  }\n\n  const onPauseButtonClick = () => {\n    setRunning(false);\n    setPause(true);\n    clearInterval(intervalId);\n  }\n\n  const onPlayButtonClick = () => {\n    const getAtualSeconds = (seconds) + (minutes * 60) + (hours * 3600);\n    startTimer((getAtualSeconds - 1) / 60);\n    setPause(false);\n  }\n\n  const onAddButtonClick = () => {\n    clearInterval(intervalId);\n    setMinutes(minutes + 1);\n    const getAtualSeconds = (seconds) + (minutes * 60) + (hours * 3600);\n    startTimer((getAtualSeconds + 59) / 60);\n    setPause(false);\n  }\n\n  const stopTimer = () => {\n    clearInterval(intervalId);\n    setRunning(false);\n    setSeconds(0);\n    setMinutes(0);\n    setHours(0);\n    setMinutesReceived(0);\n    setTimeHasCome(false);\n  }\n\n  const onDecreaseButtonClick = () => {\n    if (minutes === 0 && hours === 0) {\n      return stopTimer();\n    }\n    clearInterval(intervalId);\n    setMinutes((minutes > 0) ? minutes - 1 : 0);\n    const getAtualSeconds = (seconds) + (minutes * 60) + (hours * 3600);\n    startTimer((getAtualSeconds - 61) / 60);\n    setPause(false);\n  }\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    const parsedValue = parseFloat(value);\n    if (!parsedValue || parsedValue <= 0) {\n      return setDisabled(true);\n    };\n    setDisabled(false)\n    setMinutesReceived(parsedValue);\n  }\n\n  return (\n    <>\n      <div className=\"timerHandlers\">\n        <p>Insira o tempo, em minutos, do timer</p>\n        <div>\n          <input type=\"number\" id=\"minutesInpt\" onChange={ handleChange } min={ 0 }/>\n          <TimerButton text=\"Começar\" id=\"minutesBtn\" handleClick={ onStartButtonClick } disabled={disabled}/>\n          <TimerButton text=\"Salvar\" id=\"savePresetBtn\" handleClick={ onSavePresetButtonClick } disabled={disabled}/>\n        </div>\n      </div>\n      <div className=\"timer\">\n        <span className=\"hours\">{ hours > 9 ? hours : '0' + hours }:</span>\n        <span className=\"minutes\">{ minutes > 9 ? minutes : '0' + minutes}:</span>\n        <span className=\"seconds\">{ seconds > 9 ? seconds : '0' + seconds}</span>\n      </div>\n      <div className=\"buttons\">\n        <TimerButton text=\"II\" id=\"pauseBtn\" handleClick={ onPauseButtonClick } disabled={!timerIsRunning}/>\n        <TimerButton text=\"&#9658;\" id=\"playBtn\" handleClick={ onPlayButtonClick } disabled={!timerIsPaused}/>\n        <TimerButton text=\"Reiniciar\" id=\"restartBtn\" handleClick={ onStartButtonClick } />\n        <TimerButton text=\"+ 1\" id=\"addOneMinuteBtn\" handleClick={ onAddButtonClick } />\n        <TimerButton text=\"- 1\" id=\"decreaseOneMinuteBtn\" handleClick={ onDecreaseButtonClick } />\n        {\n          presetTimers && presetTimers.map((timer) => {\n            return (\n              <TimerButton text={`${timer} min`} key={ Math.random() } id=\"presetBtn\" handleClick={ () => onPresetTimerButtonClick(timer) }/>\n            )\n          })\n        }\n      </div>\n      {\n        timeHasCome && <Audio isPlaying={ timeHasCome } />\n      }\n    </>\n  );\n}\n\nexport default Timer;","const parasauro = 'ParasauroLO-FI';\nexport const genders = {\n  [parasauro]: 'https://www.youtube.com/watch?v=5qap5aO4i9A',\n  VelociROCKtor: 'https://www.youtube.com/watch?v=26nsBfLXwSQ',\n  POPteranodon: 'https://www.youtube.com/watch?v=99XF71Fpjl8',\n};\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/26nsBfLXwSQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","import { useContext } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport './App.css';\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Playlist from \"./components/Playlist\";\nimport Timer from \"./components/Timer\";\nimport timerContext from \"./context/timerContext\";\nimport { genders } from \"./helpers\";\n\nfunction App() {\n  const { choosenGender, timeHasCome, timerIsRunning } = useContext(timerContext);\n  return (\n    <div className=\"all-content\">\n      <Header />\n      <Timer />\n      <Playlist />\n      {\n        choosenGender && <ReactPlayer url={genders[choosenGender]} playing={!timeHasCome && timerIsRunning} height={0} width={0}/>\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport TimerContext from './timerContext';\n\nfunction TimerProvider({ children }) {\n  const [choosenGender, setChoosenGender] = useState(undefined);\n  const [timeHasCome, setTimeHasCome] = useState(false);\n  const [timerIsRunning, setRunning] = useState(false);\n  const [presetTimers, setPresetTimers] = useState([]);\n  const INITIAL_VALUE = {\n    choosenGender,\n    setChoosenGender,\n    timeHasCome,\n    setTimeHasCome,\n    timerIsRunning,\n    setRunning,\n    presetTimers,\n    setPresetTimers,\n  };\n  return (\n    <TimerContext.Provider value={ INITIAL_VALUE}>\n      { children }\n    </TimerContext.Provider>\n  );\n}\n\nexport default TimerProvider;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport TimerProvider from './context/timerProvider';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TimerProvider>\n      <App />\n    </TimerProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}